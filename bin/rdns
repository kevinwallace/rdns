#!/usr/bin/env python
import itertools, sys, optparse

from rdns.rdns import *
from rdns.IPy import IP

from twisted.internet import defer, reactor

parser = optparse.OptionParser()
parser.add_option("-a", "--all",
                  action="store_true", dest="show_all",
                  help="show all addresses (even those without reverse names)")

@defer.inlineCallbacks
def main(options, args):
    try:
        ips = []
        for addr in args:
            try:
                ips.extend(IP(addr))
            except ValueError:
                try:
                    ips.extend(IP(addr, make_net=True))
                except ValueError:
                    suffix = ''
                    if '/' in addr:
                        print addr
                        addr, suffix = addr.split('/')
                        suffix = '/' + suffix
                    addrs = yield resolveAs(addr)
                    if not addrs:
                        sys.stderr.write("unable to resolve hostname %s\n" % addr)
                        return
                    
                    localIps = []
                    for addr in addrs:
                        localIps.extend(IP(addr + suffix, make_net=True))
                    ips.extend(sorted(set(localIps)))
    
        for ip, lookup in resolvePTRs(ips):
            try:
                result = yield lookup
                if result or options.show_all:
                    print ip, ' '.join(result)
            except Exception, e:
                print ip, "\t# %r" % e
    finally:
        reactor.stop()

reactor.callLater(0, main, *parser.parse_args())
reactor.run()